@import "../variables";

:host {
    display: inline-block;
}
a {
    border-radius: var(
        --button-space-border-radius-default,
        $button-space-border-radius-default
    );
    box-sizing: border-box;
    cursor: pointer;
    display: inline-block;
    font-family: $button-font-family;
    font-size: $button-font-size-default;
    font-weight: $button-font-weight;
    height: $button-space-height-default;
    line-height: $button-space-line-height-default;
    min-width: 100%;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    margin: var(---button-space-margin-none, $button-space-margin-none);
    padding: var(--button-space-padding-default, $button-space-padding-default);
    background: var(
        --button-color-background-active,
        $button-color-background-active
    );
    border: var(
        ---button-space-border-width-none,
        $button-space-border-width-none
    );
    color: var(--button-color-text-default, $button-color-text-default);
    slot {
        &[loading] {
            display: none;
        }
    }
    &.small {
        min-width: auto;
        height: fit-content;
        padding: $button-space-padding-tiny;
        font-size: $button-font-size-small;
        line-height: $button-space-height-small;
    }
    &:visited {
        color: var(--button-color-text-default, $button-color-text-default);
    }
    &:hover {
        filter: brightness(120%) saturate(120%);
        text-decoration: none;
    }
    &:active {
        filter: brightness(80%) saturate(80%);
        text-decoration: none;
    }

    &.left {
        background: transparent;
        font-size: $button-font-size-default;
        line-height: $button-space-line-height-text;
        height: auto;
        min-width: initial;
        padding: 0;
        color: var(--button-color-text-anchor, $button-color-text-anchor);
        &:hover {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: underline;
            background: none;
        }
        &:active {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: underline;
        }
        &:disabled {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: none;
            background: none;
            cursor: not-allowed;
        }
        &::before {
            content: "";
            border: solid
                var(--button-color-text-anchor, $button-color-text-anchor);
            border-width: 0 $size-xxs $size-xxs 0;
            content: "";
            display: inline-block;
            padding: 2px;
            position: relative;
            top: -2px;
            margin-right: $size-xxs;
            transform: rotate(135deg);
            -webkit-transform: rotate(135deg);
            &:hover {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: underline;
            }
            &:active {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: underline;
            }
            &:disabled {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: none;
                background: none;
                cursor: not-allowed;
            }
        }
    }
    &.right {
        background: transparent;
        font-size: $button-font-size-default;
        line-height: $button-space-line-height-text;
        height: auto;
        min-width: initial;
        padding: 0;
        color: var(--button-color-text-anchor);
        &:hover {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            background: none;
            text-decoration: underline;
        }
        &:active {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            background: none;
            text-decoration: underline;
        }
        &:disabled {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: none;
            background: none;
            cursor: not-allowed;
        }
        &::after {
            content: "";
            border: solid
                var(--button-color-text-anchor, $button-color-text-anchor);
            border-width: 0 $size-xxs $size-xxs 0;
            content: "";
            display: inline-block;
            padding: $size-xxs;
            position: relative;
            top: -$size-xxs;
            margin-left: $size-s;
            transform: rotate(-45deg);
            -webkit-transform: rotate(-45deg);
            &:hover {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: underline;
            }
            &:active {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: underline;
            }
            &:disabled {
                color: var(
                    --button-color-text-anchor,
                    $button-color-text-anchor
                );
                text-decoration: none;
                cursor: not-allowed;
            }
        }
    }
    &.action {
        background: var(
            --button-color-background-active,
            $button-color-background-active
        );
        &:hover {
            filter: brightness(120%) saturate(120%);
        }
        &:active {
            filter: brightness(80%) saturate(80%);
        }
    }
    &.progressive {
        background: var(
            --button-color-background-progressive,
            $button-color-background-progressive
        );
    }
    &.regressive {
        background: $button-color-background-regressive;
    }
    &.destructive {
        background: $button-color-background-destructive;
    }
    &.text {
        background: transparent;
        font-size: $button-font-size-default;
        line-height: $button-space-line-height-text;
        height: auto;
        min-width: initial;
        padding: 0;
        color: var(--button-color-text-anchor, $button-color-text-anchor);
        &:hover {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: underline;
        }
        &:active {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: underline;
        }
        &:disabled {
            color: var(--button-color-text-anchor, $button-color-text-anchor);
            text-decoration: none;
            background: none;
            border-color: none;
            cursor: not-allowed;
        }
    }
    &:disabled {
        color: $button-color-text-disabled;
        background: $button-color-background-disabled;
        border-color: $button-color-background-disabled;
        cursor: not-allowed;
        &:hover {
            color: $button-color-text-disabled;
            background: $button-color-background-disabled;
            border-color: $button-color-background-disabled;
            text-decoration: none;
        }
    }
    svg {
        display: none;
        height: 44px;
        margin: 1px;
        &.small {
            height: 10px;
        }
        &[loading] {
            display: inline;
        }
        .group {
            .primary {
                fill: var(--primary-color, currentColor);
                opacity: var(--primary-opacity, 1);
            }
            .secondary {
                fill: var(--secondary-color, currentColor);
                opacity: var(--secondary-opacity, 0.4);
            }
        }
        animation: spinner-rotate 0.95s infinite cubic-bezier(0, 0, 1, 1);
    }
}
@media only screen and (min-width: 600px) {
    a {
        min-width: 88px;
    }
}
@keyframes spinner-rotate {
    from {
        transform: rotate(0deg);
        -ms-transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
        -ms-transform: rotate(360deg);
    }
}
@mixin fillSpace() {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
}
:host-context([expanded]) {
    &:before {
        @include fillSpace();
    }
    a {
        position: static;
        &:before {
            @include fillSpace();
        }
        &:after {
            @include fillSpace();
        }
    }
}
