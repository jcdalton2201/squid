{"version":3,"file":"squid-drawer.stories-415c9cee.js","sources":["../../dist/squid-drawer/squid-drawer.js"],"sourcesContent":["import { css, html, render } from 'lit';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\nimport '../squid-button/squid-button.js';\nimport { BaseElement } from '../utils/baseElement.js';\n\nvar css_248z = css`.drawer-wrapper{-webkit-overflow-scrolling:touch;overflow:auto;overflow-x:hidden;overflow-y:auto}.drawer-wrapper,.drawer-wrapper .drawer-background{bottom:0;left:0;position:fixed;right:0;top:0;z-index:1000}.drawer-wrapper .drawer-background{background-color:#b2b2bf;opacity:.7;overflow:hidden;-webkit-transition:opacity .2s ease-in-out;-o-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out}.drawer-wrapper .drawer-containter{background:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:100%;max-width:25.125rem;outline:0;overflow-y:scroll;position:fixed;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;-o-transition:transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease;width:90%;z-index:1100}.drawer-wrapper .drawer-containter.right{right:0;-webkit-transform:translate(100%);-ms-transform:translate(100%);transform:translate(100%)}.drawer-wrapper .drawer-containter.left{left:0;-webkit-transform:translate(-100%);-ms-transform:translate(-100%);transform:translate(-100%)}.drawer-wrapper .drawer-containter.display{-webkit-transform:translate(0);-ms-transform:translate(0);transform:translate(0)}.drawer-wrapper .drawer-containter .drawer-containter-headeer{-ms-flex-pack:justify;-webkit-box-shadow:inset 0 -1px 0 0 #dddde5;box-shadow:inset 0 -1px 0 0 #dddde5;display:flex;-ms-flex:0 0;flex:0 0;justify-content:space-between;min-height:3rem;padding:.75rem}.drawer-wrapper .drawer-containter .drawer-containter-headeer button{border:none;cursor:pointer}.drawer-wrapper .drawer-content{padding:.25rem}.button-wrapper[hide]{display:none}`;\n\n/**\n * @tag squid-drawer\n * @summary The `SquidDrawer` A navigation drawer provides access to destinations and app functionality, such as switching accounts. It can either be permanently on-screen or controlled by a navigation menu icon.\n\n> Drawer has two slots that should be filled.\n> slot='button' is the name that goes in the button field\n> slot='title' is the title that will display in the drawer\n> The rest of the html will be placed in the drawer.\n * @prop {String} position - Determines what side the drawer will be on. the values are `right` and `left`\n * @event\n * @example <squid-drawer >\n    <span slot='button'>Info</span>\n    <span slot='title'>Shakespears Quotes</span>\n    <squid-accordion-group>\n  <!-- one -->\n  <squid-accordion>\n    <span slot=\"summary\">The first accordion in the group</span>\n    <div slot=\"content\">\n      <p>Four score and seven years ago our fathers brought forth on this continent a new nation conceived in liberty and dedicated to the proposition that all men are created equal.</p>\n    </div>\n  </squid-accordion>\n\n  <!-- two -->\n  <squid-accordion>\n    <span slot=\"summary\">The middle child</span>\n    <div slot=\"content\">\n      <p>Four score and seven years ago our fathers brought forth on this continent a new nation conceived in liberty and dedicated to the proposition that all men are created equal.</p>\n    </div>\n  </squid-accordion>\n\n  <!-- three -->\n  <squid-accordion>\n    <span slot=\"summary\">Accordion number three</span>\n    <div slot=\"content\">\n      <p>Four score and seven years ago our fathers brought forth on this continent a new nation conceived in liberty and dedicated to the proposition that all men are created equal.</p>\n    </div>\n  </squid-accordion>\n</squid-accordion-group>\n  </squid-drawer>\n */\nclass SquidDrawer extends BaseElement {\n    static get styles() {\n        return [css_248z];\n    }\n    static get properties() {\n        return {\n            position:{\n                type:'String'\n            },\n            hide:{\n                type: Boolean\n            }\n        };\n    }\n    constructor() {\n        super();\n        this.hide = false;\n        this.position = 'left';\n        this.bindMethods(['openDrawer','closeDrawer']);\n        this.drawerTemplate = () =>\n            html`<div class=\"drawer-wrapper\">\n            <div role='presentation' class='drawer-background'></div>\n            <section id='drawer-containter' class='drawer-containter ${this.position}'>\n                <header class='drawer-containter-headeer'>\n                    <h2><slot name='title'</slot></h2>\n                    <button @click=${this.closeDrawer} type=\"button\" title=\"Close drawer\" aria-label=\"Close drawer\" \n                            class=\"close-button\">\n                        <svg  viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" class=\"close-button\" style=\"width: 1.125rem; height: 1.125rem;\">\n                        <path d=\"M5.587 3.467a1.5 1.5 0 1 0-2.194 2.046q.036.038.074.074l6.438 6.44-6.44 6.44a1.5 1.5 0 0 0 2.122 2.12l6.44-6.438 \n                        6.44 6.44a1.5 1.5 0 0 0 2.12-2.122l-6.438-6.44 6.44-6.44a1.5 1.5 0 0 0-2.122-2.12l-6.44 6.438-6.44-6.44z\">\n                        </path>\n                        </svg>\n                    </button>\n                </header>\n            <div class='drawer-content'>\n                <slot></slot>\n            </div>\n            </secton>\n            </div>`;\n    }\n    render() {\n        return html` <div class=\"container\">\n            <div class=\"button-wrapper\" ?hide=${this.hide} >\n                <squid-button @click=${this.openDrawer} \n                    ><slot name='button'></slot></squid-button\n                >\n            </div>\n            <div id=\"drawerWrapper\"></div>\n        </div>`;\n    }\n    async closeDrawer() {\n        render(\n            html``,\n            this.renderRoot.querySelector('#drawerWrapper')\n        );\n    }\n    async openDrawer() {\n        render(\n            this.drawerTemplate(),\n            this.renderRoot.querySelector('#drawerWrapper')\n        );\n        await this.updateComplete;\n        console.log('open drawer');\n        setTimeout(()=>{\n            this.renderRoot.querySelector('.drawer-containter').classList.add('display');\n        });\n        console.log(this.renderRoot.querySelector('.drawer-containter'));\n        \n    }\n}\ndefineSquidElement('squid-drawer', SquidDrawer);\n\nexport { SquidDrawer };\n"],"names":["css_248z","css","SquidDrawer","BaseElement","html","render","defineSquidElement"],"mappings":"6NAKA,IAAIA,EAAWC,wpDA0Cf,MAAMC,UAAoBC,CAAY,CAClC,WAAW,QAAS,CAChB,MAAO,CAACH,CAAQ,CACnB,CACD,WAAW,YAAa,CACpB,MAAO,CACH,SAAS,CACL,KAAK,QACR,EACD,KAAK,CACD,KAAM,OACT,CACb,CACK,CACD,aAAc,CACV,QACA,KAAK,KAAO,GACZ,KAAK,SAAW,OAChB,KAAK,YAAY,CAAC,aAAa,aAAa,CAAC,EAC7C,KAAK,eAAiB,IAClBI;AAAAA;AAAAA,uEAE2D,KAAK;AAAA;AAAA;AAAA,qCAGvC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAcrC,CACD,QAAS,CACL,OAAOA;AAAAA,gDACiC,KAAK;AAAA,uCACd,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,eAMvC,CACD,MAAM,aAAc,CAChBC,EACID,IACA,KAAK,WAAW,cAAc,gBAAgB,CAC1D,CACK,CACD,MAAM,YAAa,CACfC,EACI,KAAK,eAAgB,EACrB,KAAK,WAAW,cAAc,gBAAgB,CAC1D,EACQ,MAAM,KAAK,eACX,QAAQ,IAAI,aAAa,EACzB,WAAW,IAAI,CACX,KAAK,WAAW,cAAc,oBAAoB,EAAE,UAAU,IAAI,SAAS,CACvF,CAAS,EACD,QAAQ,IAAI,KAAK,WAAW,cAAc,oBAAoB,CAAC,CAElE,CACL,CACAC,EAAmB,eAAgBJ,CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}