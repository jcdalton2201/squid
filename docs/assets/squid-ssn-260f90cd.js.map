{"version":3,"file":"squid-ssn-260f90cd.js","sources":["../../dist/squid-ssn/squid-ssn.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { SquidInput } from '../squid-input/squid-input.js';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\nimport { emitEvent } from '../utils/squidEvents.js';\n\nvar css_248z = css`.toggle-button{background:none;border:0;color:#0e307a;cursor:pointer;font-size:.875rem}.toggle-button:hover{filter:brightness(80%) saturate(80%)}`;\n\n/**\r\n * @tag squid-ssn\r\n * @summary `SquidSsn` is an implementation of [`SquidInput`](../squid-input) that serves as a social-security number mask for privacy reasons.\r\n * @prop {String} value - value of the input.\r\n * @event squid-change - The input value has changed.\r\n * @example <squid-ssn>Social security number</squid-ssn>\r\n */\r\nclass SquidSsn extends SquidInput {\r\n    constructor() {\r\n        super();\r\n        this.bindMethod('_parseAddtion');\r\n        this.bindMethod('_parseDeletion');\r\n        this.bindMethod('__onKeydown');\r\n        this.bindMethod('_addMask');\r\n        this.bindMethod('_unmask');\r\n        this.bindMethod('_manageCursor');\r\n        this.bindMethod('__showHideToggle');\r\n        this.bindMethod('__onBlur');\r\n        this.bindMethod('__onFocus');\r\n        this._isDelete = false;\r\n        this.unmaskedValue = '';\r\n        this.maskedValue = '';\r\n        this._obfuscatedValue = '';\r\n    }\r\n\r\n    static get styles() {\r\n        return [...super.styles,css_248z];\r\n    }\r\n    /** Get the value from the value attribute */\r\n    // get value() {\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    //     return this._value;\r\n    // }\r\n\r\n    // /** When the value changes, make sure the emit events and set up masks */\r\n    // set value(_value) {\r\n    //     const value = this._unmask(_value.toString());\r\n    //     emitEvent('squid-change', _value,this);\r\n    //     const input = this.__getInput();\r\n    //     if(input){\r\n    //         this._mask(value);\r\n    //     }\r\n    // }\r\n    updated(changedProperties){\r\n        if (changedProperties.has('value')) {\r\n            const value = this._unmask(this.value.toString());\r\n            emitEvent('squid-change', this.value,this);\r\n            this._mask(value);\r\n        }\r\n    }\r\n    render(){\r\n        return html`\r\n        <div id=\"container\" data-ref=\"wrapper\">\r\n            <div class=\"label-wrapper\">\r\n                <label class=\"textfield__label\" for=\"squid-input-${this._uid}\" data-ref=\"label\"><slot></slot>${this._showDisabled}</label>\r\n                <button class='toggle-button' data-ref='toggleButton' @click=${this.__showHideToggle}>Hide</button>\r\n            </div>\r\n            <input class=\"textfield__input\" \r\n                    type=\"${this._inputType}\" \r\n                    name=\"${this.name?this.name:''}\"\r\n                    value=\"${this.value}\" \r\n                    id=\"squid-input-${this._uid}\" \r\n                    data-ref=\"input\"\r\n                    ?disabled=${this.disabled}\r\n                    ?required=${this.required}\r\n                    ?readonly=${this.readonly}\r\n                    ?autofocus=${this.autofocus}\r\n                    ?compact=${this.compact}\r\n                    @keydown=${this.__onKeydown}\r\n                    @input=${this.__onInput}\r\n                    @blur=${this.__onBlur}\r\n                    @focus=${this.__onFocus}\r\n                    maxlength=\"${this.maxlength?this.maxlength:''}\"\r\n                    max=\"${this.max?this.max:''}\"\r\n                    minlength=\"${this.minlength?this.minlength:''}\"\r\n                    min=\"${this.min?this.min:''}\"\r\n                    placeholder=\"${this.placeholder?this.placeholder:''}\"\r\n                    autocomplete=\"${this.autocomplete?this.autocomplete:''}\"\r\n                     \r\n                    aria-describedby=\" helpers-${this._uid} counter-${this._uid}\"\r\n                    class=\"\">\r\n            <squid-helpers id=\"helpers-${this._uid}\" data-ref=\"helpers\"></squid-helpers>\r\n        </div>\r\n        `;\r\n    }\r\n    firstUpdated(){\r\n        super.connectedCallback();\r\n        this.hasValidation = true;\r\n        this.maskState = 'hidden';\r\n        this._placeholder = '___-__-____';\r\n        // this.pattern = \"^\\d{3}-\\d{2}-\\d{4}$\";\r\n        this.minlength = 11;\r\n        this.maxlength = 11;\r\n        this._toggleButtonText();\r\n    }\r\n    /**\r\n     * Manage the location of the cursor\r\n     * @param {String} maskedValue the masked value\r\n     * @param {number} selectionStart the current cursor location\r\n     * @param {Event} event keyboard Event\r\n     */\r\n    _manageCursor(maskedValue, selectionStart, evt={}) {\r\n        if (selectionStart >= 3 && selectionStart < 5) {\r\n            selectionStart += 1;\r\n        } else if (selectionStart >= 5) {\r\n            selectionStart += 2;\r\n        }\r\n    \r\n        if (evt.inputType === 'deleteContentBackward') {\r\n            selectionStart = this._cachedSelection - 1;\r\n        }\r\n    \r\n        this.__getInput().setSelectionRange(selectionStart, selectionStart);\r\n    }\r\n    /**\r\n     * Handel the blur event to add placeholder back in.\r\n     * \r\n     */\r\n    __onBlur(){\r\n        const input  = this.__getInput();\r\n        if (input.value === this._placeholder) {\r\n            input.value = '';\r\n        }\r\n        this.checkValidity();\r\n    }\r\n\r\n    __onFocus(){\r\n        setTimeout(() => {\r\n            const input  = this.__getInput();\r\n            if (input.value === '') {\r\n                input.setSelectionRange(0, 0);\r\n            } else {\r\n                const firstPlaceholder = input.value.indexOf('_');\r\n                input.setSelectionRange(firstPlaceholder, firstPlaceholder);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Handel the input event\r\n     * @param {Event} evt input event\r\n     */\r\n    __onInput(evt){\r\n        console.log('on input');\r\n        if(!evt.inputType && this._isDelete){\r\n            evt.inputType = 'deleteContentBackward';\r\n        }\r\n        if(evt.inputType !== 'deleteContentBackward'){\r\n            this._parseAddtion(evt);\r\n        } else {\r\n            this._parseDeletion(evt);\r\n        }\r\n    }\r\n    /**\r\n     * Handels the keydown event\r\n     * @param {Event} evt handel keydown event\r\n     */\r\n    __onKeydown(evt){\r\n        const deleteKeys = [8,64];\r\n        const { key } = evt;\r\n        const input = this.__getInput();\r\n        const { selectionStart } = input;\r\n        this._isDelete = deleteKeys.includes(evt.keyCode);\r\n        this._cachedValue = this.unmaskedValue || '';\r\n        this._cachedSelection = selectionStart;\r\n        if(key.match(/[0-9]$/)){\r\n            input.value = '';\r\n        } else {\r\n            if(key.toString().includes('Arrow')) {\r\n                setTimeout(()=>{\r\n                    this._cachedSelection = input.selectionStart;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handel the paste event\r\n     * @param {Event} evt Paste Event\r\n     */\r\n    __onPaste(evt){\r\n        const pastedValue = evt.clipboardData.getData('text/plain');\r\n        this._mask(pastedValue);\r\n    }\r\n    /**\r\n     * adding to the mask   \r\n     * @param {Event} evt keyboard Event passed\r\n     */\r\n    _parseAddtion(evt){\r\n        const oldValue = this._addMask(this._cachedValue);\r\n        const newValue = this._unmask(oldValue.slice(0,this._cachedSelection) + this.__getInput().value + oldValue.slice(this._cachedSelection));\r\n        this._mask(newValue,evt);\r\n    }\r\n    /**\r\n     * deleting to the mask\r\n     * @param {Event} evt keyboard Event passed\r\n     */\r\n    _parseDeletion(evt){\r\n        const maskedValue = this._addMask(this._cachedValue);\r\n        const value = this._unmask(`${maskedValue.slice(0,this._cachedSelection -1)}${maskedValue.slice(this._cachedSelection)}`);\r\n        this._mask(value,evt);\r\n    }\r\n\r\n    /**\r\n     * Mask the value of the SSN\r\n     * @param {String} value value to add a mask to\r\n     */\r\n    _addMask(value=''){\r\n        const placeholderCharacter = '_';\r\n        const unmaskedValue = this._unmask(value);\r\n        const firstThree = unmaskedValue.slice(0, 3).padEnd(3, placeholderCharacter);\r\n        const secondTwo = unmaskedValue.slice(3, 5).padEnd(2, placeholderCharacter);\r\n        const lastFour = unmaskedValue.slice(5, 9).padEnd(4, placeholderCharacter);\r\n\r\n        let maskedValue = '';\r\n        if(firstThree.length === 3){\r\n            maskedValue += `${firstThree}-`;\r\n        } else {\r\n            maskedValue += firstThree;\r\n        }\r\n        if(secondTwo.length === 2){\r\n            maskedValue += `${secondTwo}-`;\r\n        } else {\r\n            maskedValue += secondTwo;\r\n        }\r\n\r\n        maskedValue += lastFour;\r\n\r\n        this.maskedValue = maskedValue;\r\n        return maskedValue;\r\n    }\r\n    /**\r\n     * Unmask the input value\r\n     * @param {String} value the Masked value\r\n     */\r\n    _unmask(value=''){\r\n        return value.replace(/\\D/g, '').slice(0, 9);\r\n    }\r\n\r\n    /**\r\n     * Mask the value to not be seen\r\n     * @param {String} value value to be masked\r\n     * @param {Event} evt keyboard event\r\n     */\r\n    async _mask(value='', evt={}) {\r\n        const unmaskedValue = this._unmask(value);\r\n        const maskedValue = this._addMask(unmaskedValue);\r\n        const isDelete = evt.inputType === 'deleteContentBackward';\r\n        this.unmaskedValue = unmaskedValue;\r\n        this.maskedValue = maskedValue;\r\n    \r\n        const obfuscateValue = await this._obfuscate(maskedValue);\r\n        const start = isDelete ?  this._cachedSelection : unmaskedValue.length;\r\n        this._manageCursor(obfuscateValue, start, evt);\r\n        this._isDelete = undefined;\r\n    }\r\n\r\n    /**\r\n     * Obfuscate the input value\r\n     * @param {String} value value to obfucate\r\n     */\r\n    _obfuscate(value=''){\r\n        return new Promise(resolve => {\r\n            const input  = this.__getInput();\r\n            let obfuscatedValue = value.slice(0, 7).replace(/[0-9]/g, '•') + value.slice(7, 12);\r\n            this._obfuscatedValue = obfuscatedValue;\r\n            this._value = this.unmaskedValue.slice(0, 9);\r\n            if (this.maskState === 'visible') {\r\n                input.value = value;\r\n            } else {\r\n                input.value = this._obfuscatedValue;\r\n            }\r\n            resolve(this.maskedValue);\r\n        });\r\n    }\r\n    /**\r\n     * toggle the text to show or hide ssn\r\n     */\r\n    _toggleButtonText(){\r\n        const toggleButton = this.renderRoot.querySelector('button');\r\n        if (this.maskState === 'hidden') {\r\n            toggleButton.innerHTML = 'Show';\r\n        } else if (this.maskState === 'visible') {\r\n            toggleButton.innerHTML = 'Hide';\r\n        }\r\n    }\r\n    /**\r\n     * toggle the value of input from hidden to showing the value\r\n     */\r\n    __showHideToggle() {\r\n        const input = this.__getInput();\r\n        if (this.maskState === 'visible') {\r\n            this.maskState = 'hidden';\r\n            input.value = this._obfuscatedValue;\r\n        } else {\r\n            this.maskState = 'visible';\r\n            input.value = this.maskedValue;\r\n        }\r\n        this._toggleButtonText();\r\n    }\r\n    /**\r\n     * Overwrite the checkValidity to handel error messages\r\n     */\r\n    checkValidity() {\r\n        if (this._value.length < 9){\r\n            this.setCustomValidity('Please enter in a valid ssn');\r\n            return false;\r\n        } else {\r\n            this.setCustomValidity('');\r\n        }\r\n        return super.checkValidity();\r\n    }\r\n}\r\ndefineSquidElement('squid-ssn',SquidSsn);\n\nexport { SquidSsn };\n"],"names":["css_248z","css","SquidSsn","SquidInput","changedProperties","value","emitEvent","html","maskedValue","selectionStart","evt","input","firstPlaceholder","deleteKeys","key","pastedValue","oldValue","newValue","placeholderCharacter","unmaskedValue","firstThree","secondTwo","lastFour","isDelete","obfuscateValue","start","resolve","obfuscatedValue","toggleButton","defineSquidElement"],"mappings":"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"}