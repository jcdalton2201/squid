{"version":3,"file":"squid-errors.stories-39b9a6a1.js","sources":["../../dist/squid-errors/squid-errors.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\nimport { findParentForm } from '../utils/findParentForm.js';\nimport { findSahdowRoot } from '../utils/findShadowRoot.js';\nimport { BaseElement } from '../utils/baseElement.js';\n\nvar css_248z = css``;\n\n/**\r\n * @tag squid-errors\r\n * @summary To be used with the SquidInput it will display the error message for validation in a constant manor.\r\n * @prop {String} id - the id for the element to be used with labels.\r\n * @prop {String} _message - the message to be shown inside the error box.\r\n * @example\r\n */\r\nclass SquidErrors extends BaseElement {\r\n    static get styles() {\r\n        return [css_248z];\r\n    }\r\n    static get properties() {\r\n        return {\r\n            id:{type:String},\r\n            _message:{type:String,reflex:false}\r\n        };\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.bindMethods(['handleChange','_onDescribesInput']);\r\n        /** Default validity messages intentionally newed up for each instance */\r\n        this.validityMessages = new Map([\r\n            ['customError', this._generateMessage(100, 'This field is invalid')],\r\n            ['badInput', this._generateMessage(4, 'This field is invalid')],\r\n            [\r\n                'patternMismatch',\r\n                this._generateMessage(\r\n                    9,\r\n                    'This field does not follow the proper pattern'\r\n                ),\r\n            ],\r\n            [\r\n                'rangeOverflow',\r\n                this._generateMessage(\r\n                    8,\r\n                    'The value does not fit in the necessary range'\r\n                ),\r\n            ],\r\n            [\r\n                'stepMismatch',\r\n                this._generateMessage(7, 'The value is not a valid step'),\r\n            ],\r\n            ['tooLong', this._generateMessage(6, 'The value is too long')],\r\n            ['tooShort', this._generateMessage(6, 'The value is too short')],\r\n            [\r\n                'typeMismatch',\r\n                this._generateMessage(5, 'The entered value is not the right format'),\r\n            ],\r\n            ['valueMissing', this._generateMessage(10, 'This field is required')],\r\n        ]);\r\n  \r\n        /** Set up inputs array */\r\n        this._inputs = [];\r\n  \r\n        /** Set up initial validators */\r\n        this.validators = this.validators || [];\r\n  \r\n    }\r\n    set id(value) {\r\n        const oldValue = value;\r\n        this._id = value;\r\n        const selector = `[aria-describedby=\"${value}\"]`;\r\n        const parentHost = findSahdowRoot(this);\r\n        if(parentHost) {\r\n            setTimeout(()=>this.setDescribes(parentHost));\r\n        } else {\r\n            setTimeout(() =>this.setSelector(selector));\r\n        }\r\n        this.requestUpdate('id',oldValue);\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get form() {\r\n        this._form = this._form || findParentForm(this);\r\n        return this._form;\r\n    }\r\n    setSelector(selector){\r\n        this.describes = document.querySelector(selector);\r\n        this._initInput(this.describes);\r\n        this.count = this.describes ? this.describes.value.length.toString():0;\r\n        this._invalidClass = {\r\n            checkbox: 'checkbox__input--error',\r\n            textarea: 'textfield__textarea--error'\r\n        }[this.describes.type] || 'textfield__input-error';\r\n        if(this.describes.tagName === 'SELECT') {\r\n            this._invalidClass = 'select__input--error';\r\n        }\r\n    }\r\n    setDescribes(parentHost){\r\n        this.describes = parentHost.querySelector('input');\r\n        if(!this.describes){\r\n            this.describes = parentHost.querySelector('textarea');\r\n                    \r\n        }\r\n        if(this.describes){\r\n            this._initInput(this.describes);\r\n            this._invalidClass = {\r\n                checkbox: 'checkbox__input--error',\r\n                textarea: 'textfield__textarea--error'\r\n            }[this.describes.type] || 'textfield__input-error';\r\n            if(this.describes.tagName === 'SELECT') {\r\n                this._invalidClass = 'select__input--error';\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return html`<div class=\"helpers\" data-ref=\"helpers\">${this._message}</div>`;\r\n        \r\n    }\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n        this._addEventListeners();\r\n    }\r\n    /**\r\n     * \r\n     * @param {HTMLElement} input input assigned value\r\n     */\r\n    _addEventListeners(input) {\r\n        input = input || this.describes;\r\n        if(input) {\r\n            input.addEventListener('change', this.handleChange);\r\n            input.addEventListener('blur', this.handleChange);\r\n            input.addEventListener('input', this._onDescribesInput);\r\n            if(this.form) {\r\n                this.form.addEventListener('submit', this.handleChange,true);\r\n                this.form.addEventListener('reset', this.handleChange,true);\r\n            }\r\n        }\r\n    }\r\n    appendHelper(helper){\r\n        this._message = helper;\r\n    }\r\n    /**\r\n   * Input input event watcher used to remove errors\r\n   * when this.describes is altered\r\n   */\r\n    _onDescribesInput() {\r\n        if (this.shadowRoot.querySelector('.error')) {\r\n            this.appendHelper(this.validityMessages.get('valid'));\r\n            if (this.describes) {\r\n                this.describes.classList.remove(this._invalidClass);\r\n            } else {\r\n                this._inputs.forEach(input =>\r\n                    input.classList.remove(this._invalidClass)\r\n                );\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * check to see if we need to prevent an event.\r\n     * @param {Event} evt event to default\r\n     * @param {Boolean} isInvalid is this invalid\r\n     */\r\n    preventDefault(evt, isInvalid){\r\n        if (this.form === evt.target && evt.type === 'submit' && isInvalid) {\r\n            evt.preventDefault();\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @returns {Object} validity a validity object;\r\n     */\r\n    checkValidity(){\r\n        let validity = {};\r\n        if (this.describes) {\r\n            validity = this.describes.validity;\r\n        } else if (this._inputs[0]) {\r\n            validity = this._inputs[0].validity;\r\n        }\r\n        if (!validity) {\r\n            validity = this._inputs[0].validity;\r\n        }\r\n        return validity;\r\n    }\r\n    /**\r\n     * \r\n     * @param {*} helper The helper object\r\n     * @returns \r\n     */\r\n    setHelper(helper) {\r\n        if(helper && helper.message){\r\n            this.appendHelper(helper.message);\r\n        } else {\r\n            this.appendHelper('');\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * When the input changes display the messae\r\n     * @param {Event} evt the event to change\r\n     */\r\n    handleChange(evt) {\r\n        const describesInvalid = this.describes && this.describes.validity && this.describes.validity.valid === false;\r\n        const inputsInvalid = describesInvalid;\r\n        const isInvalid = describesInvalid || inputsInvalid;\r\n        this.preventDefault(evt, isInvalid);\r\n        let validity = this.checkValidity();\r\n        const validityKeys = [];\r\n        this.validityMessages.forEach((value, key) => validityKeys.push(key));\r\n        const helper = validityKeys\r\n            .filter(errorKey => validity[errorKey])\r\n            .map(errorKey => this.validityMessages.get(errorKey))\r\n            .reduce((current, next) => {\r\n                return current.priority > next.priority ? current : next;\r\n            }, {});\r\n        \r\n        \r\n        this.setHelper(helper);\r\n\r\n        if (this.describes) {\r\n            if (validity.valid === false) {\r\n                this._inputInvalid(this.describes);\r\n            } else {\r\n                this._inputValid(this.describes);\r\n            }\r\n        } else if (this._inputs.length) {\r\n            if (validity.valid === false) {\r\n                this._inputs.forEach(this._inputInvalid);\r\n            } else {\r\n                this._inputs.forEach(this._inputValid);\r\n            }\r\n        }\r\n    }\r\n    _inputInvalid(input) {\r\n        input.classList.add(this._invalidClass);\r\n        input.setAttribute('aria-invalid',true);\r\n    }\r\n    _inputValid(input) {\r\n        input.classList.remove(this._invalidClass);\r\n        input.setAttribute('aria-invalid',false);\r\n    }\r\n    /**\r\n     * \r\n     * @param {HTMLElement} element input element\r\n     */\r\n    _initInput(element) {\r\n        if(element && element.dataset.helperText) {\r\n            this._message = element.dataset.helperText;\r\n        } else {\r\n            this._message = this.innerHTML;\r\n        }\r\n        this._addEventListeners(element);\r\n    }\r\n    /**\r\n     * Set the message\r\n     * @param {Number} priority \r\n     * @param {String} message \r\n     * @param {String} type \r\n     */\r\n    _generateMessage(priority, message, type = 'error') {\r\n        return {priority, message, type};\r\n    }\r\n    /**\r\n     * bind this to the method\r\n     * @param {String} methodName \r\n     * @returns void\r\n     */\r\n    bindMethod(methodName) {\r\n        this[methodName] = this[methodName].bind(this);\r\n    }\r\n    /**\r\n     * binds the array of methods with this.\r\n     * @param {Array<String>} methods\r\n     * @returns void \r\n     */\r\n    bindMethods(methods =[]) {\r\n        methods.forEach(method => this.bindMethod(method));\r\n    }\r\n    /**\r\n     * Set the error message with this one.\r\n     * @param {String} message error message\r\n     */\r\n    setCustomError(message){\r\n        const customMessage = this.validityMessages.get('customError');\r\n        customMessage.message = message;\r\n    }\r\n}\r\nclass SquidHelpers extends SquidErrors{}\r\ndefineSquidElement('squid-errors',SquidErrors);\r\ndefineSquidElement('squid-helpers',SquidHelpers);\n\nexport { SquidErrors };\n"],"names":["css_248z","css","SquidErrors","BaseElement","value","oldValue","selector","parentHost","findSahdowRoot","findParentForm","html","input","helper","evt","isInvalid","validity","describesInvalid","validityKeys","key","errorKey","current","next","element","priority","message","type","methodName","methods","method","customMessage","SquidHelpers","defineSquidElement"],"mappings":"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"}