{"version":3,"file":"squid-checkbox-group.stories-b985d2f8.js","sources":["../../dist/squid-checkbox-group/squid-checkbox-group.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { BaseElement } from '../utils/baseElement.js';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\nimport { findParentForm } from '../utils/findParentForm.js';\nimport { emitEvent } from '../utils/squidEvents.js';\n\nvar css_248z = css`:host{border:0;display:block;margin-bottom:2rem;outline:0;padding:0}.fieldset{border:0;margin-bottom:0;outline:0;padding:0}.fieldset__legend{font-size:16px;font-weight:600;line-height:1.5em;margin-bottom:24px}.fieldset__legend [class*=__helper--error]{font-size:12px;font-weight:400;line-height:1.5em;margin-top:.25rem;padding:0}.fieldset .form-field:last-of-type{margin-bottom:0}`;\n\n/**\r\n * @prop {String} legend - Set the fieldset's legend text. Reflected as a property.\r\n * @prop {String} tagName - By default set to `squid-checkbox`. This tells the component what tag name to check for changes on. Must be set before the element is created. After that, changes will cause unexpected behavior.\r\n * @event squid-change - A [`CustomEvent`](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent) emitted each time a new value is comitted. The event's `detail` property will contain the newly comitted value.  This value will always be an array.\r\n * @tag squid-checkbox-group\r\n * @summary Creates an accessible checkbox group using [`SquidCheckbox`](../squid-checkbox) or a similar component.\r\n\r\nThe `SquidCheckbox` element is an implementation of the [checkbox element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox).\r\n\r\n> Checkboxes are used to select a single item or multiple items. A checkbox has two selection states: unselected and selected.\r\n> The difference between radio buttons and checkboxes is that a radio button is for a single selection from a set of options and a checkbox allows for multiple selections from a set of options.\r\n> The main difference between a toggle and a checkbox is that the [toggle switch](../squid-toggle) is for action and checkbox is for status.\r\n * @example <squid-checkbox-group legend=\"Favorite Star Wars Movies\">\r\n  <squid-checkbox value=\"The Phantom Menace\" disabled>The Phantom Menace</squid-checkbox>\r\n  <squid-checkbox value=\"Attack of the Clones\" disabled>Attack of the Clones</squid-checkbox>\r\n  <squid-checkbox value=\"Revenge of the Sith\" disabled>Revenge of the Sith</squid-checkbox>\r\n  <squid-checkbox value=\"A New Hope\">A New Hope</squid-checkbox>\r\n  <squid-checkbox value=\"The Empire Strikes Back\">The Empire Strikes Back</squid-checkbox>\r\n  <squid-checkbox value=\"Return of the Jedi\">Return of the Jedi</squid-checkbox>\r\n  <squid-checkbox value=\"The Force Awakens\">The Force Awakens</squid-checkbox>\r\n  <squid-checkbox value=\"The Last Jedi\">The Last Jedi</squid-checkbox>\r\n  <squid-checkbox value=\"Rogue One\">Rogue One</squid-checkbox>\r\n  <squid-checkbox value=\"Solo\">Solo</squid-checkbox>\r\n</squid-checkbox-group>\r\n * \r\n */\r\nclass SquidCheckboxGroup extends BaseElement{\r\n    static get styles() {\r\n        return [css_248z];\r\n    }\r\n    static get properties() {\r\n        return {\r\n            legend: { type:String },\r\n            required: { type: Boolean },\r\n        };\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.bindMethods(['__onChange']);\r\n        const {form} = this;\r\n        this.addEventListener('keydown', evt => {\r\n            if(form && evt.code === 'Enter') {\r\n                form.dispatchEvent(new CustomEvent('submit'));\r\n            }\r\n        });\r\n        this.addEventListener('changed',this.__onChange);\r\n\r\n    }\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    get form() {\r\n        this._form = this._form || findParentForm(this);\r\n        return this._form;\r\n    }\r\n    /** Get all checked checkboxes */\r\n    get checkedElements() {\r\n        return this.querySelectorAll(`${this.constructor.childTag}[checked]`);\r\n    }\r\n    /** Get all child checkboxes */\r\n    get elements() {\r\n        return [...this.querySelectorAll(`${this.constructor.childTag}`)];\r\n    }\r\n    /** Return the value of all checked squid-checkboxes */\r\n    get value() {\r\n        return [...this.checkedElements].map(checkbox => checkbox.value);\r\n    }\r\n    /**\r\n     * Custom change event from checkbox\r\n     * @param {Event} evt change Event\r\n     */\r\n    __onChange(evt){\r\n        evt.stopImmediatePropagation();\r\n        emitEvent('group-changed',this.value,this);\r\n    }\r\n    render() {\r\n        return html`<fieldset class=\"fieldset\" data-ref=\"fieldset\">\r\n            <legend class=\"fieldset__legend\" data-ref=\"legend\">\r\n                ${this.legend}\r\n            </legend>\r\n            <div\r\n                class=\"checkbox-group\"\r\n                data-ref=\"checkboxGroup\"\r\n                aria-describedby=\"helpers\"\r\n            >\r\n                <slot></slot>\r\n            </div>\r\n        </fieldset>`;\r\n    }\r\n}\r\nSquidCheckboxGroup.childTag = 'squid-checkbox';\r\ndefineSquidElement('squid-checkbox-group', SquidCheckboxGroup);\n\nexport { SquidCheckboxGroup };\n"],"names":["css_248z","css","SquidCheckboxGroup","BaseElement","form","evt","findParentForm","checkbox","emitEvent","html","defineSquidElement"],"mappings":"uPAMA,IAAIA,EAAWC,gYA4Bf,MAAMC,UAA2BC,CAAW,CACxC,WAAW,QAAS,CAChB,MAAO,CAACH,CAAQ,CACnB,CACD,WAAW,YAAa,CACpB,MAAO,CACH,OAAQ,CAAE,KAAK,MAAQ,EACvB,SAAU,CAAE,KAAM,OAAS,CACvC,CACK,CACD,aAAc,CACV,QACA,KAAK,YAAY,CAAC,YAAY,CAAC,EAC/B,KAAM,CAAC,KAAAI,CAAI,EAAI,KACf,KAAK,iBAAiB,UAAWC,GAAO,CACjCD,GAAQC,EAAI,OAAS,SACpBD,EAAK,cAAc,IAAI,YAAY,QAAQ,CAAC,CAE5D,CAAS,EACD,KAAK,iBAAiB,UAAU,KAAK,UAAU,CAElD,CAID,IAAI,MAAO,CACP,YAAK,MAAQ,KAAK,OAASE,EAAe,IAAI,EACvC,KAAK,KACf,CAED,IAAI,iBAAkB,CAClB,OAAO,KAAK,iBAAiB,GAAG,KAAK,YAAY,mBAAmB,CACvE,CAED,IAAI,UAAW,CACX,MAAO,CAAC,GAAG,KAAK,iBAAiB,GAAG,KAAK,YAAY,UAAU,CAAC,CACnE,CAED,IAAI,OAAQ,CACR,MAAO,CAAC,GAAG,KAAK,eAAe,EAAE,IAAIC,GAAYA,EAAS,KAAK,CAClE,CAKD,WAAWF,EAAI,CACXA,EAAI,yBAAwB,EAC5BG,EAAU,gBAAgB,KAAK,MAAM,IAAI,CAC5C,CACD,QAAS,CACL,OAAOC;AAAAA;AAAAA,kBAEG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUlB,CACL,CACAP,EAAmB,SAAW,iBAC9BQ,EAAmB,uBAAwBR,CAAkB;;;;;;;;;;;;"}