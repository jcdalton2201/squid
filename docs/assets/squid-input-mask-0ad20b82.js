import{S as h}from"./squid-input-3d76c19e.js";import{d as u}from"./defineSquidElement-344f2f43.js";import{e as n}from"./squidEvents-397fab83.js";const d="\\^$*+?.()|{}[]".split(""),p=(o,t,e)=>o.slice(0,t)+e+o.slice(t+1);class c{constructor(t,e="",i){this.input=t,this.maskPattern=e,this.controller=i,this.numValidate=/^\d$/,this.stringValidate=/^[a-zA-Z]$/,this.allValidate=/^\w$/,this.mask=e.split("").map(s=>{let a;return s==="A"?a=this.stringValidate:s==="1"?a=this.numValidate:s==="e"&&(a=this.allValidate),{char:s,validator:a}}),this.validators=this.mask.filter(s=>s.validator),this.placeholder=this.mask.map(s=>s.validator?"_":s.char).join(""),this.regExp=this.mask.map(s=>{const{validator:a,char:r}=s;if(a)switch(a){case this.numValidate:return"\\d";case this.stringValidate:return"[a-zA-Z]";case this.allValidate:return"\\w"}else return d.includes(r)?`\\${r}`:r}).join(""),t.pattern=this.regExp,this.__inputKeydownMask=this.__inputKeydownMask.bind(this),this.__inputPaste=this.__inputPaste.bind(this),t.addEventListener("keydown",this.__inputKeydownMask),t.addEventListener("paste",this.__inputPaste)}disconnect(){this.input.removeEventListener("keydown",this.__inputKeydownMask),this.input.removeEventListener("paste",this.__inputPaste)}parseRaw(t){t=t||"";const e=t.replace(/\W/g,"");if(e.length===this.validators.length){if(!e.split("").map((a,r)=>!!a.match(this.validators[r].validator)).reduce((a,r)=>r===!1?!1:a))return!1;let s=-1;return this.mask.map(a=>a.validator?(s+=1,e[s]):a.char).join("")}else return t}__inputKeydownMask(t){const{selectionStart:e,selectionEnd:i}=t.target,s=t.key;if(!(["Backspace","Tab","Enter","Escape","ArrowLeft","ArrowRight","Shift"].includes(s)||t.metaKey)){if(t.target.value.length>=this.mask.length)return t.preventDefault(),!1;if(e===i){let r=e,l=this.mask[r];for(;l&&!l.validator&&s!=l.char;)t.target.value=p(t.target.value,r,l.char),t.target.setSelectionRange(r+1,r+1),l=this.mask[r+1],r+=1;if(l&&l.validator&&!!!s.match(l.validator))return t.preventDefault(),!1}}}__inputPaste(t){const e=t.clipboardData.getData("text/plain"),i=this.parseRaw(e);i===!1?this.controller.setCustomValidity("The information entered does not follow the proper format"):(this.controller.setCustomValidity(""),setTimeout(()=>{this.controller.value=i}))}}class m extends h{constructor(){super(),this._value=""}static get properties(){return console.log(super.properties),{...super.properties,mask:{type:String}}}async firstUpdated(t){const{mask:e}=t;this.mask=this.mask||e,this._maskUtil=new c(this.__getInput(),this.mask,this),this.pattern=this._maskUtil.regExp}updated(t){t.has("value")&&this.addMask()}addMask(){this._value=this.value;const t=this.renderRoot.querySelector("input");if(this._maskUtil){const e=this._maskUtil.parseRaw(this._value);console.log(this.value),e&&this._value!==e?(t.value!==e&&(t.value=e,this.value=e,this.setCustomValidity("")),n("squid-change",e,this)):e?n("squid-change",this._value,this):(this.value=e,t.value=this._value,n("squid-change",this._value,this),e===!1&&this.setCustomValidity("The information entered does not follow the proper format"))}}__onInput(){const t=this.renderRoot.querySelector("input"),e=t.value;if(this.value=e,this._maskUtil){const i=this._maskUtil.parseRaw(e);i&&e!==i?(t.value!==i&&(t.value=i,this.value=i,this.setCustomValidity("")),n("squid-change",i,this)):i?n("squid-change",e,this):(this.value=i,t.value=e,n("squid-change",e,this),i===!1&&this.setCustomValidity("The information entered does not follow the proper format"))}}}u("squid-input-mask",m);export{m as S};
//# sourceMappingURL=squid-input-mask-0ad20b82.js.map
