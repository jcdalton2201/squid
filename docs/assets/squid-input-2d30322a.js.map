{"version":3,"file":"squid-input-2d30322a.js","sources":["../../dist/squid-input/squid-input.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { SquidInputBase } from '../squid-input-base/squid-input-base.js';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\n\nvar css_248z = css`#container{display:flex;flex-direction:column;width:auto}#container squid-helpers{color:var(--color-alert-error,#de2131)}#container .label-wrapper{color:var(--font-color-default,#4d4d4d);display:flex;font-size:.75rem;justify-content:space-between;letter-spacing:.5px;margin-bottom:var(--space-inset-xs,.25rem .25rem .25rem .25rem);opacity:.9;position:relative;vertical-align:middle}#container label{text-transform:capitalize}#container input{background-image:none;border:2px solid var(--font-color-default,#999);border-radius:var(--radius-default,.25rem);box-shadow:none;font-size:1rem;height:var(--font-size-default,1rem);line-height:1.5;margin:0;padding:var(--padding-default,.5rem);width:auto}#container input:disabled{cursor:not-allowed}#container input:read-only{cursor:not-allowed}#container input.textfield__input--error{border:2px solid var(--color-alert-error,#de2131)}`;\n\n/**\n * @tag squid-input\n * @summary The `SquidInput` component is an implementation the HTML [input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) element.\n\n> Text inputs allow text or numeric values to be entered and edited in one line.\n> Text areas allow multiple lines of text to be entered.\n\nSquid breaks up the input elements each into their own component for convenience including [`SquidCheckbox`](../squid-checkbox), [`SquidCombobox`](../squid-checkbox), [`SquidEmail`](../squid-email), `SquidInput`, [`SquidNumber`](../squid-number), [`SquidPassword`](../squid-password), [`SquidRadio`](../squid-radio), [`SquidSearch`](../squid-search), [`SquidSelect`](SquidSelect), [`SquidSsn`](../squid-ssn), [`SquidTelephone`](../squid-telephone) and [`SquidTextarea`](../squid-textarea).\n * @prop {String} disabled -  A proxy for the input disabled attribute. Reflected as a property. \n * @prop {String} required -  A proxy for the input required attribute. Reflected as a property. \n * @prop {String} autofocus -  A proxy for the input autofocus attribute. Reflected as a property. \n * @prop {String} compact -  Uses a compact input. This specific style is not defined by the ONE Design System, but used widely across Financial Services. \n * @prop {String} tooltip -  Sets a tooltip on the combobox label using [`SquidTooltip`](../squid-tooltip). Reflected as a property. \n * @prop {String} placeholder -  A proxy for the input placeholder attribute. Reflected as a property. \n * @prop {String} value -  Sets the input's value and emits an `squid-change` event when updated. Reflected as a property. \n * @prop {String} minlength -  The input's `minlength` attribute (`minLength` property). Reflected here solely as `minlength`. \n * @prop {String} maxlength -  The input's `maxlength` attribute (`maxLength` property). Reflected here solely as `maxlength`. \n * @prop {String} readonly -  A proxy for the input's `readonly` attribute (`readOnly`) property. Reflected here as `readonly`. \n * @prop {String} autocomplete -  A proxy for the input's `autocomplete` property. Reflected as a property. \n * @prop {String} pattern -  A RegEx to be used by the input for validation purposes. Serves as a proxy for the input's pattern property/attribute. \n * @prop {String} min -  A proxy for the input's `min` attribute. Reflected as a property. \n * @prop {String} max -  A proxy for the input's `max` attribute. Reflected as a property. \n * @prop {String} counter -  Displays an instance of the [`SquidCharacterCount`](../squid-character-count) component if set to true and a maxlength is provided. Reflected as a property. \n * @event squid-input-change - Event dispatched for an input change.\n * @example <squid-input required minlength=\"3\" maxlength=\"5\" tooltip=\"Tooltip text\">\n * This input will run validations\n * </squid-input>\n */\nclass SquidInput extends SquidInputBase {\n    static get styles() {\n        return [css_248z];\n    }\n    static get properties() {\n        return {\n            minlength:{type:String,attribute:true},\n            maxlength:{type:String},\n            autocomplete:{type:String},\n            tooltip:{type:String},\n            pattern:{type:String},\n            min:{type:String},\n            max:{type:String},\n            value:{type:String},\n            placeholder:{type:String},\n            size:{type:String},\n            errorMessage:{type:String},\n            step:{type:String},\n            disabled:{type:Boolean},\n            required:{type:Boolean},\n            readonly:{type:Boolean},\n            autofocus:{type:Boolean},\n            compact:{type:Boolean},\n            counter:{type:Boolean},\n            name:{type:String},\n        };\n    }\n    constructor(type){\n        super();\n        this._showDisabled = '';\n        this._inputType = type;\n    }\n    firstUpdated(){\n        this.updatePattern();\n        this.update();\n    }\n    updatePattern(){\n        if(this.pattern){\n            const input = this.renderRoot.querySelector('input');\n            input.pattern = this.pattern;\n        }\n    }\n    updated(changedProperties){\n        if (changedProperties.has('value')) {\n            this.updatePattern();\n        }\n    }\n\n    render(){\n        return html`\n        <div id=\"container\" data-ref=\"wrapper\">\n            <div class=\"label-wrapper\">\n                <label class=\"textfield__label\" for=\"squid-input-${this._uid}\" data-ref=\"label\"><slot></slot>${this._showDisabled}</label>\n                <squid-character-count data-ref=\"counter\" ?hidden=${!this.counter} id=\"counter-${this._uid}\" ></squid-character-count>\n                ${this.maxlength?'maxlength='+this.maxlength:'NO'}\n            </div>\n            <input class=\"textfield__input\" \n                    maxlength=\"${this.maxlength}\"\n                    type=\"${this._inputType}\" \n                    name=\"${this.name}\" \n                    value=\"${this.value}\" \n                    id=\"squid-input-${this._uid}\" \n                    data-ref=\"input\"\n                    ${this.pattern?'pattern='+this.pattern:''}\n                    ?disabled=${this.disabled}\n                    ?required=${this.required}\n                    ?readonly=${this.readonly}\n                    ?autofocus=${this.autofocus}\n                    ?compact=${this.compact}\n                    @input=${this.__onInput}\n                    \n                    ${this.max?'max='+this.max:''}\n                    minlength='${this.minlength}'\n                    ${this.min?'min='+this.min:''}\n                    placeholder=\"${this.placeholder?this.placeholder:''}\"\n                    autocomplete=\"${this.autocomplete?this.autocomplete:''}\"\n                     \n                    aria-describedby=\" helpers-${this._uid} counter-${this._uid}\"\n                    class=\"\">\n            <squid-helpers id=\"helpers-${this._uid}\" data-ref=\"helpers\"></squid-helpers>\n        </div>\n        `;\n    }\n   \n    __onInput(evt) {\n        this.value = evt.target.value;\n    }\n}\ndefineSquidElement('squid-input',SquidInput);\n\nexport { SquidInput };\n"],"names":["css_248z","css","SquidInput","SquidInputBase","type","input","changedProperties","html","evt","defineSquidElement"],"mappings":"6JAIA,IAAIA,EAAWC,k3BA8Bf,MAAMC,UAAmBC,CAAe,CACpC,WAAW,QAAS,CAChB,MAAO,CAACH,CAAQ,CACnB,CACD,WAAW,YAAa,CACpB,MAAO,CACH,UAAU,CAAC,KAAK,OAAO,UAAU,EAAI,EACrC,UAAU,CAAC,KAAK,MAAM,EACtB,aAAa,CAAC,KAAK,MAAM,EACzB,QAAQ,CAAC,KAAK,MAAM,EACpB,QAAQ,CAAC,KAAK,MAAM,EACpB,IAAI,CAAC,KAAK,MAAM,EAChB,IAAI,CAAC,KAAK,MAAM,EAChB,MAAM,CAAC,KAAK,MAAM,EAClB,YAAY,CAAC,KAAK,MAAM,EACxB,KAAK,CAAC,KAAK,MAAM,EACjB,aAAa,CAAC,KAAK,MAAM,EACzB,KAAK,CAAC,KAAK,MAAM,EACjB,SAAS,CAAC,KAAK,OAAO,EACtB,SAAS,CAAC,KAAK,OAAO,EACtB,SAAS,CAAC,KAAK,OAAO,EACtB,UAAU,CAAC,KAAK,OAAO,EACvB,QAAQ,CAAC,KAAK,OAAO,EACrB,QAAQ,CAAC,KAAK,OAAO,EACrB,KAAK,CAAC,KAAK,MAAM,CAC7B,CACK,CACD,YAAYI,EAAK,CACb,QACA,KAAK,cAAgB,GACrB,KAAK,WAAaA,CACrB,CACD,cAAc,CACV,KAAK,cAAa,EAClB,KAAK,OAAM,CACd,CACD,eAAe,CACX,GAAG,KAAK,QAAQ,CACZ,MAAMC,EAAQ,KAAK,WAAW,cAAc,OAAO,EACnDA,EAAM,QAAU,KAAK,QAE5B,CACD,QAAQC,EAAkB,CAClBA,EAAkB,IAAI,OAAO,GAC7B,KAAK,cAAa,CAEzB,CAED,QAAQ,CACJ,OAAOC;AAAAA;AAAAA;AAAAA,mEAGoD,KAAK,uCAAuC,KAAK;AAAA,oEAChD,CAAC,KAAK,uBAAuB,KAAK;AAAA,kBACpF,KAAK,UAAU,aAAa,KAAK,UAAU;AAAA;AAAA;AAAA,iCAG5B,KAAK;AAAA,4BACV,KAAK;AAAA,4BACL,KAAK;AAAA,6BACJ,KAAK;AAAA,sCACI,KAAK;AAAA;AAAA,sBAErB,KAAK,QAAQ,WAAW,KAAK,QAAQ;AAAA,gCAC3B,KAAK;AAAA,gCACL,KAAK;AAAA,gCACL,KAAK;AAAA,iCACJ,KAAK;AAAA,+BACP,KAAK;AAAA,6BACP,KAAK;AAAA;AAAA,sBAEZ,KAAK,IAAI,OAAO,KAAK,IAAI;AAAA,iCACd,KAAK;AAAA,sBAChB,KAAK,IAAI,OAAO,KAAK,IAAI;AAAA,mCACZ,KAAK,YAAY,KAAK,YAAY;AAAA,oCACjC,KAAK,aAAa,KAAK,aAAa;AAAA;AAAA,iDAEvB,KAAK,gBAAgB,KAAK;AAAA;AAAA,yCAElC,KAAK;AAAA;AAAA,SAGzC,CAED,UAAUC,EAAK,CACX,KAAK,MAAQA,EAAI,OAAO,KAC3B,CACL,CACAC,EAAmB,cAAcP,CAAU"}