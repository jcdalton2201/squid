{"version":3,"file":"squid-calendar-e5f703ba.js","sources":["../../dist/utils/dateUtils.js","../../dist/squid-calendar/squid-calendar.js"],"sourcesContent":["const dayOfWeek = ['Sun', 'Mon', 'Tue', 'Wes', 'Thur', 'Fri', 'Sat'];\r\nconst months = [\r\n    {\r\n        name: 'January',\r\n        abbr: 'Jan',\r\n    },\r\n    {\r\n        name: 'February',\r\n        abbr: 'Feb',\r\n    },\r\n    {\r\n        name: 'March',\r\n        abbr: 'Mar',\r\n    },\r\n    {\r\n        name: 'April',\r\n        abbr: 'Apr',\r\n    },\r\n    {\r\n        name: 'May',\r\n        abbr: 'May',\r\n    },\r\n    {\r\n        name: 'June',\r\n        abbr: 'Jun',\r\n    },\r\n    {\r\n        name: 'July',\r\n        abbr: 'Jul',\r\n    },\r\n    {\r\n        name: 'August',\r\n        abbr: 'Aug',\r\n    },\r\n    {\r\n        name: 'September',\r\n        abbr: 'Sep',\r\n    },\r\n    {\r\n        name: 'October',\r\n        abbr: 'Oct',\r\n    },\r\n    {\r\n        name: 'November',\r\n        abbr: 'Nov',\r\n    },\r\n    {\r\n        name: 'December',\r\n        abbr: 'Dec',\r\n    },\r\n];\n\nexport { dayOfWeek, months };\n","import { BaseElement } from '../utils/baseElement.js';\nimport { css, html } from 'lit';\nimport { defineSquidElement } from '../utils/defineSquidElement.js';\nimport { dayOfWeek, months } from '../utils/dateUtils.js';\nimport { emitEvent } from '../utils/squidEvents.js';\n\nvar css_248z = css`.container{display:grid;grid-template-columns:repeat(7,1fr);max-width:200px}.container .header{background-color:var(--calendar-color-background-default,#1448b8);color:var(--calendar-color-default,#fff);grid-column:1/-1;padding:8px}.container .left-nav{grid-column:1/2;justify-content:flex-start;padding:4px}.container .left-nav,.container .middle-nav{background-color:#ccc;cursor:pointer;display:flex}.container .middle-nav{align-items:center;font-size:.9rem;grid-column:2/-2;justify-content:center}.container .right-nav{background-color:#ccc;cursor:pointer;display:flex;grid-column:-1/-2;justify-content:flex-end;padding:.25rem}.container .close-buttons{display:flex;grid-column:1/-1;justify-content:center}.container .close-buttons a{color:inherit;margin:0 4px;text-decoration:none}.container .day,.container .title{font-size:.9rem;text-align:center}.container .day{cursor:pointer;padding:16% 0}.container .day.selected-date{background-color:#148514;border-radius:50%;color:#fff}.container .year{cursor:pointer;font-size:.9rem;padding:16% 0;text-align:center}.container .year.even{grid-column:2/4}.container .year.odd{grid-column:4/6}.container .hide{display:none}`;\n\n/**\r\n * @prop vaue {String} - This must be in a Javascript Date parsable format\r\n * @event selected-date {Date} -  a date has been selected\r\n * @event date-submit {Boolean} -  The Ok button has been clicked\r\n * @tag squid-calendar\r\n * @summary Calendars is a visual calendar for selecting dates.\r\n * @example \r\n<squid-calendar>\r\n</squid-calendar>\r\n*/\r\nclass SquidCalendar extends BaseElement {\r\n    static get styles() {\r\n        return [css_248z];\r\n    }\r\n    static get properties() {\r\n        return {\r\n            value: {\r\n                type: String,\r\n                reflect: true,\r\n                converter: {\r\n                    toAttribute(value) {\r\n                        return value.toLocaleDateString();\r\n                    },\r\n                    fromAttribute(value) {\r\n                        if(value){\r\n                            return new Date(value);\r\n                        }\r\n                        return null;\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.bindMethods([\r\n            '__generateMonth',\r\n            '__increment',\r\n            '__decrease',\r\n            '__selectDate',\r\n            '__removeSelectDate',\r\n            '__generateYears',\r\n            '__toggleYear',\r\n            '__setYear',\r\n            'submit',\r\n            'close',\r\n        ]);\r\n        const millDate = Date.now();\r\n        this.currentDate = new Date(millDate);\r\n        this.displayMonth = new Date(millDate);\r\n        this.displayMonth.setDate(1);\r\n    }\r\n    firstUpdated() {\r\n        if (this.value) {\r\n            this.displayMonth = new Date(this.value.getTime());\r\n            this.requestUpdate();\r\n        }\r\n    }\r\n    shouldUpdate(changedProperties){\r\n        if(changedProperties.has('value')){\r\n            if(this.value){\r\n                this.displayMonth = new Date(this.value.getTime());\r\n                this.requestUpdate();\r\n            }\r\n        }\r\n        return changedProperties;\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div data-ref=\"container\" class=\"container\">\r\n                <div class=\"header\">\r\n                    ${this.value ? dayOfWeek[this.value.getDay()] : dayOfWeek[this.displayMonth.getDay()]},\r\n                    ${this.value ? months[this.value.getMonth()].abbr : months[this.displayMonth.getMonth()].abbr}\r\n                    ${this.value ? this.value.getDate() : this.currentDate.getDate()}\r\n                    ${this.value ? this.value.getFullYear() : this.currentDate.getFullYear()}\r\n                </div>\r\n                <div class=\"left-nav\"  @click=${this.__decrease}>\r\n                    <svg\r\n                        aria-hidden=\"true\"\r\n                        focusable=\"false\"\r\n                        data-prefix=\"far\"\r\n                        data-icon=\"chevron-left\"\r\n                        role=\"img\"\r\n                        width=\"14px\"\r\n                        height=\"14px\"\r\n                        viewBox=\"0 0 256 512\"\r\n                        class=\"chevron-left\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\"\r\n                            class=\"\"\r\n                        ></path>\r\n                    </svg>\r\n                </div>\r\n                <div class=\"middle-nav\" @click=${this.__toggleYear}>\r\n                    ${months[this.displayMonth.getMonth()].name.toUpperCase()}\r\n                    ${this.displayMonth.getFullYear()}\r\n                </div>\r\n                <div class=\"right-nav\" @click=${this.__increment}>\r\n                    <svg\r\n                        aria-hidden=\"true\"\r\n                        focusable=\"false\"\r\n                        data-prefix=\"far\"\r\n                        data-icon=\"chevron-right\"\r\n                        role=\"img\"\r\n                        width=\"14px\"\r\n                        height=\"14px\"\r\n                        viewBox=\"0 0 256 512\"\r\n                        class=\"chevron-right\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z\"\r\n                            class=\"\"\r\n                        ></path>\r\n                    </svg>\r\n                </div>\r\n                <div class=\"title\">SU</div>\r\n                <div class=\"title\">MO</div>\r\n                <div class=\"title\">TU</div>\r\n                <div class=\"title\">WE</div>\r\n                <div class=\"title\">TH</div>\r\n                <div class=\"title\">FR</div>\r\n                <div class=\"title\">SA</div>\r\n                ${this.__generateMonth().map(\r\n        (item, index) => html` <div\r\n                        @click=${this.__selectDate}\r\n                        class=\"day ${this.isYear ? 'hide' : ''} ${this.value &&\r\n                            this.value.getDate() === index + 1 &&\r\n                            this.value.getMonth() ===\r\n                            this.displayMonth.getMonth() &&\r\n                            this.value.getFullYear() ===\r\n                            this.displayMonth.getFullYear()\r\n    ? 'selected-date'\r\n    : ''}\"\r\n                        style=\"${index === 0\r\n        ? 'grid-column-start:' + (item + 1)\r\n        : ''}\"\r\n                    >\r\n                        ${index + 1}\r\n                    </div>`\r\n    )}\r\n                ${this.__generateYears().map(\r\n        (item, index) => html`\r\n                        <div\r\n                            @click=${this.__setYear}\r\n                            class=\"year ${index % 2 ? 'odd' : 'even'} ${this\r\n    .isYear\r\n    ? ''\r\n    : 'hide'}\"\r\n                        >\r\n                            ${item}\r\n                        </div>\r\n                    `\r\n    )}\r\n                <div class=\"close-buttons\">\r\n                    <a href=\"javascript:void(0)\" @click=${this.close}>CLOSE</a>\r\n                    <a href=\"javascript:void(0)\" @click=${this.submit}>OK</a>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n    close() {\r\n        emitEvent('date-close', null, this);  \r\n    }\r\n    submit() {\r\n        emitEvent('date-submit', null, this);\r\n    }\r\n    /**\r\n     *\r\n     * @param {MouseEvent} evt Click event to set Year\r\n     */\r\n    __setYear(evt) {\r\n        const temp = parseInt(evt.currentTarget.innerText);\r\n        this.displayMonth.setFullYear(temp);\r\n        this.isYear = false;\r\n        this.requestUpdate();\r\n    }\r\n    __generateYears() {\r\n        let index = -3;\r\n        const items = [];\r\n        for (let i = index; i < 5; i++) {\r\n            items.push(this.displayMonth.getFullYear() + i);\r\n        }\r\n        return items;\r\n    }\r\n    __generateMonth() {\r\n        const days = new Date(\r\n            this.displayMonth.getFullYear(),\r\n            this.displayMonth.getMonth() + 1,\r\n            0\r\n        ).getDate();\r\n        const currentDateOfWeek = [];\r\n        for (let index = 1; index <= days; index++) {\r\n            this.displayMonth.setDate(index);\r\n            currentDateOfWeek.push(this.displayMonth.getDay());\r\n        }\r\n        this.displayMonth.setDate(1);\r\n        return currentDateOfWeek;\r\n    }\r\n    __increment() {\r\n        if (this.isYear) {\r\n            this.displayMonth.setFullYear(this.displayMonth.getFullYear() + 8);\r\n        } else {\r\n            this.displayMonth.setMonth(this.displayMonth.getMonth() + 1);\r\n            this.__removeSelectDate();\r\n        }\r\n        this.requestUpdate();\r\n    }\r\n    __decrease() {\r\n        if (this.isYear) {\r\n            this.displayMonth.setFullYear(this.displayMonth.getFullYear() - 8);\r\n        } else {\r\n            this.displayMonth.setMonth(this.displayMonth.getMonth() - 1);\r\n            this.__removeSelectDate();\r\n        }\r\n        this.requestUpdate();\r\n    }\r\n    /**\r\n     *\r\n     * @param {MouseEvent} evt click event\r\n     */\r\n    __selectDate(evt) {\r\n        this.__removeSelectDate();\r\n        evt.currentTarget.classList.add('selected-date');\r\n        const temp = parseInt(evt.currentTarget.innerText);\r\n        this.value = new Date(this.displayMonth.getTime());\r\n        this.value.setDate(temp);\r\n        this.requestUpdate();\r\n        emitEvent('date-selected', {value:this.getAttribute('value')}, this);\r\n    }\r\n    __removeSelectDate() {\r\n        if (this.renderRoot.querySelector('.selected-date')) {\r\n            this.renderRoot\r\n                .querySelector('.selected-date')\r\n                .classList.remove('selected-date');\r\n        }\r\n    }\r\n    __toggleYear() {\r\n        this.isYear = !this.isYear;\r\n        this.requestUpdate();\r\n    }\r\n}\r\ndefineSquidElement('squid-calendar', SquidCalendar);\n\nexport { SquidCalendar };\n"],"names":["dayOfWeek","months","css_248z","css","SquidCalendar","BaseElement","value","millDate","changedProperties","html","item","index","emitEvent","evt","temp","items","i","days","currentDateOfWeek","defineSquidElement"],"mappings":"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"}